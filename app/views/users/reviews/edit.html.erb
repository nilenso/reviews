<h3>Write a review for <%= @review.reviewee.decorate.username %></h3>

<%= form_for [current_user, @review] do |f| %>
  <fieldset>
  <%= f.label :text, "Review Text" %>
  <span class="markdown-logo">
    <a href="http://daringfireball.net/projects/markdown/basics" target="_blank">
      <img src="/markdown.png" />
    </a>
  </span>
  <%= f.text_area :text, class: "form-control" %>
  </fieldset>

  <fieldset>
  <%= f.label :text, "Suggested Level" %>
  <div>
    <%= f.text_field :suggested_level, class: "review-status-select" %>
  </div>
  </fieldset>

  <%= f.submit "Abstain from reviewing", class: "btn btn-warning save-review-btn", name: :abstain, data: { confirm: 'This will destroy your drafted review, continue?' } %>
  <%= f.submit "Save As Draft / Unpublish", class: "btn btn-info save-review-btn", name: :pending %>
  <%= f.submit "Publish", class: "btn btn-primary save-review-btn", name: :done %>
<% end %>

<blockquote class="level_summary">
  <h3 id="l0">Level 0</h3>
  <ul>
    <li>needs a pair or mentor</li>
    <li>can pair and deliver work</li>
    <li>contributes to story (does not only passively participate in pairing)</li>
    <li>learns, reads books; can teach herself independently</li>
    <li>can read and understand small chunks of code independently</li> 
    <li>no sales or hiring expectations</li>    
  </ul>
  
  <h3 id="l0++">Closer to Level 1</h3>
  <ul>
    <li>starting to deliver while pairing</li>
    <li>should understand the basic underlying principles around the processes that the company follows</li>
    <li>for instance, should understand and follow best practices such as checking in code every day, writing tests, getting code reviewed, version control etc</li>
    <li>for instance, should understand agile practices such as story writing, sprints (or whatever the company is following)</li>
  </ul>  

  <h3 id="l1">Level 1</h3>
  <ul>
    <li>can deliver a full feature while pairing with an L0</li>
    <li>can address L0 queries satisfactorily</li>
    <li>can read an existing codebase and start contributing to it</li>
    <li>not expected to rewrite or start a project from scratch</li>
    <li>starting to take sales calls</li>
  </ul>

  <h3 id="l1++">Closer to Level 2</h3>
  <ul>
    <li>contributes to IPMs</li>
    <li>brings something to the table on sales calls</li>
    <li>should have pushed the major chunk of a project to production end-to-end</li>
    <li>understands the rhythm of a project : monitoring, instrumentation</li>
    <li>does not think in terms of just algorithm, also understands about code structure, modularity and reuse.</li>
    <li>familiar with circuit breakers, throttles etc. i.e. contribution is beyond just writing good code</li>
  </ul>

  <h3 id="l2">Level 2</h3>
  <ul>
    <li>can translate a spec into a product</li>
    <li>starting to mentor L0 and L1</li>
    <li>can speak to candidates about nilenso</li>
    <li>can interview effectively, make sound judgements about applicants</li>
    <li>can speak to clients about nilenso, and our work</li>
  </ul>

  <h3 id="l2++">Closer to Level 3</h3>
  <ul>
    <li>can think of a service in a more holistic manner</li>
    <li>can write major chunks of a product from scratch by herself, if needed</li>
    <li>can reason about DB schema, connection interfaces, performance characterists, boxes to run on, load balancers, sharding, tuning the DB etc.</li>
    <li>can make sound proposals on tech stack</li>
  </ul>

  <h3 id="l3">Level 3</h3>
  <ul>
    <li>can work independently and deliver a project if need be</li>
    <li>can translate a business requirement document and deploy a project</li>
    <li>can see cross-product relationships</li>
    <li>thinks about cascading failures and how you negotiate interfaces of other products</li>
    <li>has sound judgement about potential candidates, juniors</li>
    <li>can read past the obvious</li>
    <li>starting to mentor L2, L1, L0</li>
  </ul>

  <h3 id="l3++">Closer to Level 4</h3>
  <ul>
    <li>can think in terms of the eco-system as a whole</li>
    <li>has good judgement around tech stacks around stability, reliability, durability</li>
    <li>can justify tech decisions</li>
    <li>can propose and if need be evangelise changes, bring in new processes, practices, languages</li>
    <li>can generalise knowledge sufficiently (breadth + breadth) to quickly pick up and work on something new</li>
    <li>starting to teach</li>
  </ul>

  <h3 id="l4">Level 4</h3>
  <ul>
    <li>can pitch an architecture</li>
    <li>can reason about the architecture of a solution, and implement it</li>
    <li>can review and reason about choices proposed by L3 and below</li>
  </ul>

  <h3 id="l4++">Closer to Level 5</h3>
  <ul>
    <li>can design and architect a solution</li>
    <li>exercises caution, is prudent in the choices (their choices have greater consequences)</li>
    <li>can substantiate recommendations using experience or proof of concept</li>
    <li>use their knowledge and experience as a multiplier</li>
    <li>more of a coach</li>
  </ul>

  <h3 id="l5">Level 5</h3>
  <ul>
    <li>can own a project (like Insider)</li>
    <li>can read a situation and tailor conversations accordingly</li>
    <li>can convince, impress, inspire</li>
    <li>people skills are very important</li>
  </ul>

  <h3 id="l6">Level 6</h3>
  <ul>
    <li>can handle multiple projects</li>
    <li>sets technical direction based on business requirements</li>
    <li>reviews cross-platform changes</li>
    <li>pitches new products (can be within a project) and processes</li>
  </ul>  
</blockquote>
